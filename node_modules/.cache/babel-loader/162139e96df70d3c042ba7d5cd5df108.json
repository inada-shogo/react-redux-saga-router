{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport { RootReducer } from './root.reducer';\nimport { RootSaga } from './root.saga'; // redux-saga\n\nconst sagaMiddleWare = createSagaMiddleware(); // redux-logger\n\nconst reduxLogger = createLogger({\n  collapsed: true,\n  diff: true,\n  duration: true\n}); // ストア生成\n\nconst ConfigureStore = preloadState => {\n  const middleware = [reduxLogger, sagaMiddleWare];\n  const middlewareEnhancer = applyMiddleware(...middleware);\n  const store = createStore(RootReducer(), preloadState, middlewareEnhancer);\n  sagaMiddleWare.run(RootSaga);\n  return store;\n}; // Store取り出し\n\n\n_c = ConfigureStore;\nexport const Store = ConfigureStore();\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigureStore\");","map":{"version":3,"sources":["/Users/shogo/work/my/status-manager/src/redux/store.ts"],"names":["applyMiddleware","createStore","createSagaMiddleware","createLogger","RootReducer","RootSaga","sagaMiddleWare","reduxLogger","collapsed","diff","duration","ConfigureStore","preloadState","middleware","middlewareEnhancer","store","run","Store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,WAAT,QAAmC,gBAAnC;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AACA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMK,WAAW,GAAGJ,YAAY,CAAC;AAC/BK,EAAAA,SAAS,EAAE,IADoB;AAE/BC,EAAAA,IAAI,EAAE,IAFyB;AAG/BC,EAAAA,QAAQ,EAAE;AAHqB,CAAD,CAAhC,C,CAMA;;AACA,MAAMC,cAAc,GAAIC,YAAD,IAA0B;AAC/C,QAAMC,UAAU,GAAG,CAACN,WAAD,EAAcD,cAAd,CAAnB;AACA,QAAMQ,kBAAkB,GAAGd,eAAe,CAAC,GAAGa,UAAJ,CAA1C;AACA,QAAME,KAAK,GAAGd,WAAW,CACvBG,WAAW,EADY,EAEvBQ,YAFuB,EAGvBE,kBAHuB,CAAzB;AAKAR,EAAAA,cAAc,CAACU,GAAf,CAAmBX,QAAnB;AACA,SAAOU,KAAP;AACD,CAVD,C,CAYA;;;KAZMJ,c;AAaN,OAAO,MAAMM,KAAK,GAAGN,cAAc,EAA5B","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport { RootReducer, State } from './root.reducer';\nimport { RootSaga } from './root.saga';\n\n// redux-saga\nconst sagaMiddleWare = createSagaMiddleware();\n\n// redux-logger\nconst reduxLogger = createLogger({\n  collapsed: true,\n  diff: true,\n  duration: true,\n});\n\n// ストア生成\nconst ConfigureStore = (preloadState?: State) => {\n  const middleware = [reduxLogger, sagaMiddleWare];\n  const middlewareEnhancer = applyMiddleware(...middleware);\n  const store = createStore(\n    RootReducer(),\n    preloadState,\n    middlewareEnhancer\n  );\n  sagaMiddleWare.run(RootSaga);\n  return store ;\n};\n\n// Store取り出し\nexport const Store = ConfigureStore();\n"]},"metadata":{},"sourceType":"module"}