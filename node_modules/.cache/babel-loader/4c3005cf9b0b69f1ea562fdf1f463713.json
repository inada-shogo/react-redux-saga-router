{"ast":null,"code":"import{applyMiddleware,createStore}from\"redux\";import createSagaMiddleware from\"redux-saga\";import{createLogger}from\"redux-logger\";import{RootReducer}from'./root.reducer';import{RootSaga}from'./root.saga';// redux-saga\nvar sagaMiddleWare=createSagaMiddleware();// redux-logger\nvar reduxLogger=createLogger({collapsed:true,diff:true,duration:true});// ストア生成\nvar ConfigureStore=function ConfigureStore(preloadState){var middleware=[reduxLogger,sagaMiddleWare];var middlewareEnhancer=applyMiddleware.apply(void 0,middleware);var store=createStore(RootReducer(),preloadState,middlewareEnhancer);sagaMiddleWare.run(RootSaga);return store;};// Store取り出し\nexport var Store=ConfigureStore();","map":{"version":3,"sources":["/Users/shogo/work/my/status-manager/src/redux/store.ts"],"names":["applyMiddleware","createStore","createSagaMiddleware","createLogger","RootReducer","RootSaga","sagaMiddleWare","reduxLogger","collapsed","diff","duration","ConfigureStore","preloadState","middleware","middlewareEnhancer","store","run","Store"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,WAA1B,KAA6C,OAA7C,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,OAASC,WAAT,KAAmC,gBAAnC,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA;AACA,GAAMC,CAAAA,cAAc,CAAGJ,oBAAoB,EAA3C,CAEA;AACA,GAAMK,CAAAA,WAAW,CAAGJ,YAAY,CAAC,CAC/BK,SAAS,CAAE,IADoB,CAE/BC,IAAI,CAAE,IAFyB,CAG/BC,QAAQ,CAAE,IAHqB,CAAD,CAAhC,CAMA;AACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,YAAD,CAA0B,CAC/C,GAAMC,CAAAA,UAAU,CAAG,CAACN,WAAD,CAAcD,cAAd,CAAnB,CACA,GAAMQ,CAAAA,kBAAkB,CAAGd,eAAe,MAAf,QAAmBa,UAAnB,CAA3B,CACA,GAAME,CAAAA,KAAK,CAAGd,WAAW,CACvBG,WAAW,EADY,CAEvBQ,YAFuB,CAGvBE,kBAHuB,CAAzB,CAKAR,cAAc,CAACU,GAAf,CAAmBX,QAAnB,EACA,MAAOU,CAAAA,KAAP,CACD,CAVD,CAYA;AACA,MAAO,IAAME,CAAAA,KAAK,CAAGN,cAAc,EAA5B","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createLogger } from \"redux-logger\";\nimport { RootReducer, State } from './root.reducer';\nimport { RootSaga } from './root.saga';\n\n// redux-saga\nconst sagaMiddleWare = createSagaMiddleware();\n\n// redux-logger\nconst reduxLogger = createLogger({\n  collapsed: true,\n  diff: true,\n  duration: true,\n});\n\n// ストア生成\nconst ConfigureStore = (preloadState?: State) => {\n  const middleware = [reduxLogger, sagaMiddleWare];\n  const middlewareEnhancer = applyMiddleware(...middleware);\n  const store = createStore(\n    RootReducer(),\n    preloadState,\n    middlewareEnhancer\n  );\n  sagaMiddleWare.run(RootSaga);\n  return store ;\n};\n\n// Store取り出し\nexport const Store = ConfigureStore();\n"]},"metadata":{},"sourceType":"module"}